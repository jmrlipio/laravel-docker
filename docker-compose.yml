version: '3.1'

networks:
  laravel:

services:
  site:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "9080:80"
    volumes:
      - ./src:/var/www/html:delegated
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql/mysql-server:8.0.23
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: moxie_universe_live
      MYSQL_USER: moxie
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel
  
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '9081:80'
    environment:
      UPLOAD_LIMIT: 1024M
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: password
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html:delegated
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    image: composer:latest
    #image: composer:2.0.2
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - laravel
    entrypoint: ['composer'] # Install without other php modules required

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
